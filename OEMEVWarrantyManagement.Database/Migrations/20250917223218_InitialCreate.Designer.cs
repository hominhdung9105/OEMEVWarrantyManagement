// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OEMEVWarrantyManagement.Database.Data;

#nullable disable

namespace OEMEVWarrantyManagement.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917223218_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Appointment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TypeAppointmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TypeAppointmentId");

                    b.HasIndex("VIN");

                    b.ToTable("Appointments", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Assignment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AssignedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SCStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SCTechID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SCStaffId");

                    b.HasIndex("SCTechID");

                    b.HasIndex("TaskId");

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarCondition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartTypeModelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PartTypeModelId");

                    b.ToTable("CarConditions", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarConditionCarConditionCurrent", b =>
                {
                    b.Property<string>("CarConditionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarConditionCurrentId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CarConditionId", "CarConditionCurrentId");

                    b.HasIndex("CarConditionCurrentId");

                    b.ToTable("CarConditionCarConditionCurrent", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarConditionCurrent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicianId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.ToTable("CarConditionCurrents", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarInfo", b =>
                {
                    b.Property<string>("VIN")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("VIN");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ModelId");

                    b.ToTable("CarInfo", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.DeliveryPart", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateReceive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartsID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffReceive")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StaffSend")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("StaffReceive");

                    b.HasIndex("StaffSend");

                    b.ToTable("DeliveryParts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WorkPlacesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("WorkPlacesId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarConditionCurrentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CarConditionCurrentId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartReplaced", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartTypeModelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PartTypeModelId");

                    b.ToTable("PartReplaced", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PartTypes", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartTypeModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PartTypeId");

                    b.ToTable("PartTypeModels", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Parts", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartTypeModelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PartTypeModelId");

                    b.ToTable("Parts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartsDeliveryPart", b =>
                {
                    b.Property<string>("DeliveryPartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DeliveryPartId", "PartsId");

                    b.HasIndex("PartsId");

                    b.ToTable("PartsDeliveryParts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartsReplacement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartModelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PartModelId");

                    b.ToTable("PartsReplacement", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartsRequestPart", b =>
                {
                    b.Property<string>("RequestPartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestPartId", "PartsId");

                    b.HasIndex("PartsId");

                    b.ToTable("PartsRequestParts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Recall", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EVMStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfCars")
                        .HasColumnType("int");

                    b.Property<string>("PartReplacementId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recall", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RecallHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeSCTechId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmpoloyeeSCStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartReplacementId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecallId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSCTechId");

                    b.HasIndex("EmpoloyeeSCStaffId");

                    b.HasIndex("RecallId");

                    b.HasIndex("VIN");

                    b.ToTable("RecallHistories", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RecallHistoryPartsReplacement", b =>
                {
                    b.Property<string>("RecallHistoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartsReplacementId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RecallHistoryId", "PartsReplacementId");

                    b.HasIndex("PartsReplacementId");

                    b.ToTable("RecallHistoryPartsReplacements", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RecallPartsReplacement", b =>
                {
                    b.Property<string>("RecallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartsReplacementId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RecallId", "PartsReplacementId");

                    b.HasIndex("PartsReplacementId");

                    b.ToTable("RecallPartsReplacements", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RequestPart", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EVMStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SCStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EVMStaffId");

                    b.HasIndex("SCStaffId");

                    b.ToTable("RequestParts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RoleEmployee", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("RoleEmployee", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Task", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Techs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Techs", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.TypeAppointment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TypeAppointments", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Warranty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeSCStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeTechId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartRereplacementId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestWarrantyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WarrantyRecordId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSCStaffId");

                    b.HasIndex("EmployeeTechId");

                    b.HasIndex("RequestWarrantyId");

                    b.HasIndex("WarrantyRecordId");

                    b.ToTable("Warranties", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyPartsReplacement", b =>
                {
                    b.Property<string>("WarrantyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartsReplacementId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("WarrantyId", "PartsReplacementId");

                    b.HasIndex("PartsReplacementId");

                    b.ToTable("WarrantyPartsInWarranty", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyPolicy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Conditions")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Coverage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PeriodInMonths")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WarrantyPolicies", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("WarrantyPolicyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VIN");

                    b.HasIndex("WarrantyPolicyId");

                    b.ToTable("WarrantyRecord", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarConditionCurrentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EVMStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SCStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CarConditionCurrentId");

                    b.HasIndex("EVMStaffId");

                    b.HasIndex("SCStaffId");

                    b.HasIndex("VIN");

                    b.ToTable("WarrantyRequests", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WorkPlaceDeliveryPart", b =>
                {
                    b.Property<string>("WorkPlaceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeliveryPartId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("WorkPlaceId", "DeliveryPartId");

                    b.HasIndex("DeliveryPartId");

                    b.ToTable("WorkPlaceDeliveryParts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WorkPlacePartTypeModel", b =>
                {
                    b.Property<string>("WorkPlacesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartTypeModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("WorkPlacesId", "PartTypeModelId");

                    b.HasIndex("PartTypeModelId");

                    b.ToTable("WorkPlacePartTypeModels(PartInStock)", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WorkPlaces", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("WorkPlaces", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Appointment", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.TypeAppointment", "TypeAppointment")
                        .WithMany("Appointments")
                        .HasForeignKey("TypeAppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarInfo", "CarInfo")
                        .WithMany("Appointments")
                        .HasForeignKey("VIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarInfo");

                    b.Navigation("Customer");

                    b.Navigation("TypeAppointment");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Assignment", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "EmployeeSCStaff")
                        .WithMany("AssignmentsAsSCStaff")
                        .HasForeignKey("SCStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "EmployeeSCTech")
                        .WithMany("AssignmentsAsSCTech")
                        .HasForeignKey("SCTechID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Task", "Task")
                        .WithMany("Assignments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeSCStaff");

                    b.Navigation("EmployeeSCTech");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarCondition", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartTypeModel", "PartTypeModel")
                        .WithMany("CarConditions")
                        .HasForeignKey("PartTypeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartTypeModel");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarConditionCarConditionCurrent", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarConditionCurrent", "CarConditionCurrent")
                        .WithMany("CarConditionCarConditionCurrents")
                        .HasForeignKey("CarConditionCurrentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarCondition", "CarCondition")
                        .WithMany("CarConditionCarConditionCurrents")
                        .HasForeignKey("CarConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarCondition");

                    b.Navigation("CarConditionCurrent");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarConditionCurrent", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "EmployeeTechnician")
                        .WithMany("CarConditionCurrents")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeTechnician");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarInfo", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Customer", "Customer")
                        .WithMany("CarInfos")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarModel", "CarModel")
                        .WithMany("CarInfos")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Customer", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "Employee")
                        .WithMany("Customer")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.DeliveryPart", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "StaffReceiveEmployee")
                        .WithMany("DeliveryPartsReceive")
                        .HasForeignKey("StaffReceive")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "StaffSendEmployee")
                        .WithMany("DeliveryPartsSend")
                        .HasForeignKey("StaffSend")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StaffReceiveEmployee");

                    b.Navigation("StaffSendEmployee");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Employee", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.WorkPlaces", "WorkPlaces")
                        .WithMany("Employees")
                        .HasForeignKey("WorkPlacesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("WorkPlaces");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Image", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarConditionCurrent", "CarConditionCurrent")
                        .WithMany("Images")
                        .HasForeignKey("CarConditionCurrentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarConditionCurrent");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartReplaced", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "Employee")
                        .WithMany("PartReplaceds")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartTypeModel", "PartTypeModel")
                        .WithMany("PartReplaceds")
                        .HasForeignKey("PartTypeModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PartTypeModel");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartTypeModel", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartType", "PartType")
                        .WithMany("PartTypeModels")
                        .HasForeignKey("PartTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartType");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Parts", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartTypeModel", "PartTypeModels")
                        .WithMany("Parts")
                        .HasForeignKey("PartTypeModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartTypeModels");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartsDeliveryPart", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.DeliveryPart", "DeliveryPart")
                        .WithMany("PartsDeliveryParts")
                        .HasForeignKey("DeliveryPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Parts", "Parts")
                        .WithMany("PartsDeliveryParts")
                        .HasForeignKey("PartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPart");

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartsReplacement", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartTypeModel", "PartTypeModel")
                        .WithMany("PartsReplacements")
                        .HasForeignKey("PartModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartTypeModel");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartsRequestPart", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Parts", "Parts")
                        .WithMany("PartsRequestParts")
                        .HasForeignKey("PartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.RequestPart", "RequestPart")
                        .WithMany("PartsRequestParts")
                        .HasForeignKey("RequestPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parts");

                    b.Navigation("RequestPart");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RecallHistory", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Techs", "EmployeeTechs")
                        .WithMany("RecallHistoriesAsTechs")
                        .HasForeignKey("EmployeeSCTechId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "EmployeeStaffs")
                        .WithMany("RecallHistoriesAsSCStaff")
                        .HasForeignKey("EmpoloyeeSCStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Recall", "Recall")
                        .WithMany("RecallHistories")
                        .HasForeignKey("RecallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarInfo", "CarInfo")
                        .WithMany("RecallHistories")
                        .HasForeignKey("VIN")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarInfo");

                    b.Navigation("EmployeeStaffs");

                    b.Navigation("EmployeeTechs");

                    b.Navigation("Recall");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RecallHistoryPartsReplacement", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartsReplacement", "PartsReplacement")
                        .WithMany("RecallHistoryPartsReplacements")
                        .HasForeignKey("PartsReplacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.RecallHistory", "RecallHistory")
                        .WithMany("RecallHistoryPartsReplacements")
                        .HasForeignKey("RecallHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartsReplacement");

                    b.Navigation("RecallHistory");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RecallPartsReplacement", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartsReplacement", "PartsReplacement")
                        .WithMany("RecallPartsReplacements")
                        .HasForeignKey("PartsReplacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Recall", "Recall")
                        .WithMany("RecallPartsReplacements")
                        .HasForeignKey("RecallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartsReplacement");

                    b.Navigation("Recall");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RequestPart", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "EVMStaff")
                        .WithMany()
                        .HasForeignKey("EVMStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "SCStaff")
                        .WithMany("RequestParts")
                        .HasForeignKey("SCStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EVMStaff");

                    b.Navigation("SCStaff");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RoleEmployee", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "Employee")
                        .WithMany("RoleEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Role", "Role")
                        .WithMany("RoleEmployees")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Techs", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "Employee")
                        .WithMany("Teches")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Warranty", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "EmployeeSCStaff")
                        .WithMany("WarrantiesAsSCTech")
                        .HasForeignKey("EmployeeSCStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Techs", "EmployeeTech")
                        .WithMany("Warranties")
                        .HasForeignKey("EmployeeTechId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.WarrantyRequest", "RequestWarranty")
                        .WithMany("Warranties")
                        .HasForeignKey("RequestWarrantyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.WarrantyRecord", "WarrantyRecord")
                        .WithMany("Warrantys")
                        .HasForeignKey("WarrantyRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeSCStaff");

                    b.Navigation("EmployeeTech");

                    b.Navigation("RequestWarranty");

                    b.Navigation("WarrantyRecord");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyPartsReplacement", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartsReplacement", "PartsReplacement")
                        .WithMany("WarrantyPartsInWarranties")
                        .HasForeignKey("PartsReplacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Warranty", "Warranty")
                        .WithMany("WarrantyPartReplacements")
                        .HasForeignKey("WarrantyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartsReplacement");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyRecord", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Customer", "Customer")
                        .WithMany("WarrantyRecords")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarInfo", "CarInfo")
                        .WithMany("WarrantyRecords")
                        .HasForeignKey("VIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.WarrantyPolicy", "WarrantyPolicy")
                        .WithMany("WarrantyRecords")
                        .HasForeignKey("WarrantyPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarInfo");

                    b.Navigation("Customer");

                    b.Navigation("WarrantyPolicy");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyRequest", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarConditionCurrent", "CarConditionCurrent")
                        .WithMany("WarrantyRequests")
                        .HasForeignKey("CarConditionCurrentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "EVMStaff")
                        .WithMany("WarrantyRequestsAsEVMStaff")
                        .HasForeignKey("EVMStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.Employee", "SCStaff")
                        .WithMany("WarrantyRequestsAsSCStaff")
                        .HasForeignKey("SCStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.CarInfo", "CarInfo")
                        .WithMany("WarrantyRequests")
                        .HasForeignKey("VIN")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarConditionCurrent");

                    b.Navigation("CarInfo");

                    b.Navigation("EVMStaff");

                    b.Navigation("SCStaff");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WorkPlaceDeliveryPart", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.DeliveryPart", "DeliveryPart")
                        .WithMany("WorkPlaceDeliveryParts")
                        .HasForeignKey("DeliveryPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.WorkPlaces", "WorkPlace")
                        .WithMany("WorkPlaceDeliveryParts")
                        .HasForeignKey("WorkPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryPart");

                    b.Navigation("WorkPlace");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WorkPlacePartTypeModel", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Database.Models.PartTypeModel", "PartTypeModel")
                        .WithMany("WorkPlacePartTypeModels")
                        .HasForeignKey("PartTypeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Database.Models.WorkPlaces", "WorkPlaces")
                        .WithMany("WorkPlacePartTypeModels")
                        .HasForeignKey("WorkPlacesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartTypeModel");

                    b.Navigation("WorkPlaces");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarCondition", b =>
                {
                    b.Navigation("CarConditionCarConditionCurrents");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarConditionCurrent", b =>
                {
                    b.Navigation("CarConditionCarConditionCurrents");

                    b.Navigation("Images");

                    b.Navigation("WarrantyRequests");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarInfo", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("RecallHistories");

                    b.Navigation("WarrantyRecords");

                    b.Navigation("WarrantyRequests");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.CarModel", b =>
                {
                    b.Navigation("CarInfos");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Customer", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("CarInfos");

                    b.Navigation("WarrantyRecords");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.DeliveryPart", b =>
                {
                    b.Navigation("PartsDeliveryParts");

                    b.Navigation("WorkPlaceDeliveryParts");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Employee", b =>
                {
                    b.Navigation("AssignmentsAsSCStaff");

                    b.Navigation("AssignmentsAsSCTech");

                    b.Navigation("CarConditionCurrents");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryPartsReceive");

                    b.Navigation("DeliveryPartsSend");

                    b.Navigation("PartReplaceds");

                    b.Navigation("RecallHistoriesAsSCStaff");

                    b.Navigation("RequestParts");

                    b.Navigation("RoleEmployees");

                    b.Navigation("Teches");

                    b.Navigation("WarrantiesAsSCTech");

                    b.Navigation("WarrantyRequestsAsEVMStaff");

                    b.Navigation("WarrantyRequestsAsSCStaff");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartType", b =>
                {
                    b.Navigation("PartTypeModels");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartTypeModel", b =>
                {
                    b.Navigation("CarConditions");

                    b.Navigation("PartReplaceds");

                    b.Navigation("Parts");

                    b.Navigation("PartsReplacements");

                    b.Navigation("WorkPlacePartTypeModels");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Parts", b =>
                {
                    b.Navigation("PartsDeliveryParts");

                    b.Navigation("PartsRequestParts");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.PartsReplacement", b =>
                {
                    b.Navigation("RecallHistoryPartsReplacements");

                    b.Navigation("RecallPartsReplacements");

                    b.Navigation("WarrantyPartsInWarranties");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Recall", b =>
                {
                    b.Navigation("RecallHistories");

                    b.Navigation("RecallPartsReplacements");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RecallHistory", b =>
                {
                    b.Navigation("RecallHistoryPartsReplacements");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.RequestPart", b =>
                {
                    b.Navigation("PartsRequestParts");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Role", b =>
                {
                    b.Navigation("RoleEmployees");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Task", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Techs", b =>
                {
                    b.Navigation("RecallHistoriesAsTechs");

                    b.Navigation("Warranties");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.TypeAppointment", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.Warranty", b =>
                {
                    b.Navigation("WarrantyPartReplacements");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyPolicy", b =>
                {
                    b.Navigation("WarrantyRecords");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyRecord", b =>
                {
                    b.Navigation("Warrantys");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WarrantyRequest", b =>
                {
                    b.Navigation("Warranties");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Database.Models.WorkPlaces", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("WorkPlaceDeliveryParts");

                    b.Navigation("WorkPlacePartTypeModels");
                });
#pragma warning restore 612, 618
        }
    }
}
