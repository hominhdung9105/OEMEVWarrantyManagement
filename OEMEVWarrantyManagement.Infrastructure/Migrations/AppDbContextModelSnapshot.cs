// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OEMEVWarrantyManagement.Infrastructure.Persistence;

#nullable disable

namespace OEMEVWarrantyManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.BackWarrantyClaim", b =>
                {
                    b.Property<Guid>("WarrantyClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedByEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("WarrantyClaimId", "CreatedDate");

                    b.HasIndex("CreatedByEmployeeId");

                    b.ToTable("BackWarrantyClaim", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Campaign", b =>
                {
                    b.Property<Guid>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationOrgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampaignId");

                    b.HasIndex("OrganizationOrgId");

                    b.ToTable("Campaigns", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.CampaignTarget", b =>
                {
                    b.Property<Guid>("CampaignTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetRefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearFrom")
                        .HasColumnType("int");

                    b.Property<int?>("YearTo")
                        .HasColumnType("int");

                    b.HasKey("CampaignTargetId");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignTargets", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.CampaignVehicle", b =>
                {
                    b.Property<Guid>("CampaignVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("HandledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NotifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CampaignVehicleId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("Vin");

                    b.ToTable("CampaignVehicles", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.ClaimAttachment", b =>
                {
                    b.Property<string>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UploadedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttachmentId");

                    b.HasIndex("ClaimId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("ClaimAttachments", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.ClaimPart", b =>
                {
                    b.Property<Guid>("ClaimPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumberNew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumberOld")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimPartId");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimParts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationOrgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("OrganizationOrgId");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("OrgId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Organization", b =>
                {
                    b.Property<Guid>("OrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrgId");

                    b.ToTable("Organizations", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Part", b =>
                {
                    b.Property<Guid>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("PartId");

                    b.HasIndex("OrgId", "Model")
                        .IsUnique();

                    b.ToTable("Parts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.PartOrder", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PartDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ServiceCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ServiceCenterId");

                    b.ToTable("PartOrders", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.PartOrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("PartOrderItems", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Vehicle", b =>
                {
                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Vin");

                    b.HasIndex("CustomerId");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.VehiclePart", b =>
                {
                    b.Property<Guid>("VehiclePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UninstalledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("VehiclePartId");

                    b.HasIndex("Vin");

                    b.ToTable("VehicleParts", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.VehicleWarrantyPolicy", b =>
                {
                    b.Property<Guid>("VehicleWarrantyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("VehicleWarrantyId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("Vin");

                    b.ToTable("VehicleWarrantyPolicies", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WarrantyClaim", b =>
                {
                    b.Property<Guid>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConfirmBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ServiceCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VehicleWarrantyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VehicleWarrantyId");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("WarrantyPolicyPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("failureDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimId");

                    b.HasIndex("ConfirmBy");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ServiceCenterId");

                    b.HasIndex("VehicleWarrantyId");

                    b.HasIndex("Vin");

                    b.HasIndex("WarrantyPolicyPolicyId");

                    b.ToTable("WarrantyClaims", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WarrantyPolicy", b =>
                {
                    b.Property<Guid>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoveragePeriodMonths")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationOrgId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PolicyId");

                    b.HasIndex("OrganizationOrgId");

                    b.ToTable("WarrantyPolicies", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WorkOrder", b =>
                {
                    b.Property<Guid>("WorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkOrderId");

                    b.HasIndex("AssignedTo");

                    b.ToTable("WorkOrders", (string)null);
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.BackWarrantyClaim", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Employee", "CreatedByEmployee")
                        .WithMany("CreatedFeedbacks")
                        .HasForeignKey("CreatedByEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.WarrantyClaim", "WarrantyClaim")
                        .WithMany("Feedbacks")
                        .HasForeignKey("WarrantyClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("WarrantyClaim");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Campaign", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Organization", "Organization")
                        .WithMany("Campaigns")
                        .HasForeignKey("OrganizationOrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.CampaignTarget", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Campaign", "Campaign")
                        .WithMany("CampaignTargets")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.CampaignVehicle", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Campaign", "Campaign")
                        .WithMany("CampaignVehicles")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("CampaignVehicles")
                        .HasForeignKey("Vin")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.ClaimAttachment", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.WarrantyClaim", "WarrantyClaim")
                        .WithMany("ClaimAttachments")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Employee", "UploadedByEmployee")
                        .WithMany("UploadedAttachments")
                        .HasForeignKey("UploadedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UploadedByEmployee");

                    b.Navigation("WarrantyClaim");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.ClaimPart", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.WarrantyClaim", "WarrantyClaim")
                        .WithMany("ClaimParts")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WarrantyClaim");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Customer", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Organization", "Organization")
                        .WithMany("Customers")
                        .HasForeignKey("OrganizationOrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Employee", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Part", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Organization", "Organization")
                        .WithMany("Parts")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.PartOrder", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Employee", "CreatedByEmployee")
                        .WithMany("CreatedPartOrders")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Organization", "ServiceCenter")
                        .WithMany("PartOrders")
                        .HasForeignKey("ServiceCenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("ServiceCenter");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.PartOrderItem", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.PartOrder", "PartOrder")
                        .WithMany("PartOrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartOrder");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Customer", "Customer")
                        .WithMany("Vehicles")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.VehiclePart", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleParts")
                        .HasForeignKey("Vin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.VehicleWarrantyPolicy", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.WarrantyPolicy", "WarrantyPolicy")
                        .WithMany("VehicleWarrantyPolicies")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleWarrantyPolicies")
                        .HasForeignKey("Vin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");

                    b.Navigation("WarrantyPolicy");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WarrantyClaim", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Employee", "ConfirmByEmployee")
                        .WithMany("ApprovedClaims")
                        .HasForeignKey("ConfirmBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Employee", "CreatedByEmployee")
                        .WithMany("CreatedClaims")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Organization", "ServiceCenter")
                        .WithMany("ServicedWarrantyClaims")
                        .HasForeignKey("ServiceCenterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.VehicleWarrantyPolicy", "VehicleWarrantyPolicy")
                        .WithMany()
                        .HasForeignKey("VehicleWarrantyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("WarrantyClaims")
                        .HasForeignKey("Vin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.WarrantyPolicy", null)
                        .WithMany("WarrantyClaims")
                        .HasForeignKey("WarrantyPolicyPolicyId");

                    b.Navigation("ConfirmByEmployee");

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("ServiceCenter");

                    b.Navigation("Vehicle");

                    b.Navigation("VehicleWarrantyPolicy");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WarrantyPolicy", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Organization", "Organization")
                        .WithMany("WarrantyPolicies")
                        .HasForeignKey("OrganizationOrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WorkOrder", b =>
                {
                    b.HasOne("OEMEVWarrantyManagement.Domain.Entities.Employee", "AssignedToEmployee")
                        .WithMany("AssignedWorkOrders")
                        .HasForeignKey("AssignedTo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AssignedToEmployee");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Campaign", b =>
                {
                    b.Navigation("CampaignTargets");

                    b.Navigation("CampaignVehicles");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Employee", b =>
                {
                    b.Navigation("ApprovedClaims");

                    b.Navigation("AssignedWorkOrders");

                    b.Navigation("CreatedClaims");

                    b.Navigation("CreatedFeedbacks");

                    b.Navigation("CreatedPartOrders");

                    b.Navigation("UploadedAttachments");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Organization", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("PartOrders");

                    b.Navigation("Parts");

                    b.Navigation("ServicedWarrantyClaims");

                    b.Navigation("WarrantyPolicies");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.PartOrder", b =>
                {
                    b.Navigation("PartOrderItems");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("CampaignVehicles");

                    b.Navigation("VehicleParts");

                    b.Navigation("VehicleWarrantyPolicies");

                    b.Navigation("WarrantyClaims");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WarrantyClaim", b =>
                {
                    b.Navigation("ClaimAttachments");

                    b.Navigation("ClaimParts");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("OEMEVWarrantyManagement.Domain.Entities.WarrantyPolicy", b =>
                {
                    b.Navigation("VehicleWarrantyPolicies");

                    b.Navigation("WarrantyClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
